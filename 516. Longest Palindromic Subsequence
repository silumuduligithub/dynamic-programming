class Solution {
    public int longestPalindromeSubseq(String s) {
        int count = 0;
        int n = s.length();
        int[][] storage = new int[n][n];
        for(int dig = 0; dig < n; dig++){
            for(int i = 0, j = dig; j < n; i++, j++){
                char ch1 = s.charAt(i);
                char ch2 = s.charAt(j);
                if(dig == 0){
                    storage[i][j] = 1;
                }else if(dig == 1){
                    if(ch1 == ch2)storage[i][j] = 2;
                    else storage[i][j] = 1;
                }else{
                     if(ch1 == ch2) storage[i][j] = storage[i + 1][j - 1] +   2;
                    else{
                        storage[i][j] = Math.max(storage[i][j - 1], storage[i + 1][j]);
                    }
                }
            }
        }
        return  storage[0][n - 1];
    }
}

class Solution {
    public boolean memo(String s1, int idx1, String s2, int idx2, String s3, int idx3, Boolean[][][] dp){
        if(idx1 == s1.length() && idx2 == s2.length() && s3.length() == idx3)return true;
        if((idx1 >= s1.length()  && idx2 >= s2.length()) && idx3 < s3.length())return false;
        if(dp[idx1][idx2][idx3] != null)return dp[idx1][idx2][idx3];
        boolean x = false;
        boolean y = false;
        if(idx1 < s1.length() && idx3 < s3.length() && s1.charAt(idx1) == s3.charAt(idx3)){
            x = memo(s1, idx1 + 1, s2, idx2, s3, idx3 + 1, dp);
        }
        if(idx2 < s2.length() && idx3 < s3.length() && s2.charAt(idx2) == s3.charAt(idx3)){
            y = memo(s1, idx1, s2, idx2 + 1, s3, idx3 + 1, dp);
        }
        dp[idx1][idx2][idx3] = x || y;
        return dp[idx1][idx2][idx3];
    }
    public boolean isInterleave(String s1, String s2, String s3) {
        return memo(s1, 0, s2, 0, s3, 0, new Boolean[s1.length() + 1][s2.length() + 1][s3.length() + 1]);
    }
}

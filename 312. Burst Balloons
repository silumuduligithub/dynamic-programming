class Solution {
    public int maxCoins(int[] nums) {
        return maximumCost(nums, 0, nums.length - 1, new int[nums.length][nums.length]);
    }
    public int maximumCost(int[] nums, int i, int j, int[][] dp){
        if(i > j)return 0;
        if(dp[i][j] != 0)return dp[i][j];
        int maximumCost = Integer.MIN_VALUE;
        for(int cut = i; cut <= j; cut++){
            int left = i - 1 < 0 ? 1 : nums[i - 1];
            int right = j + 1 >= nums.length ? 1 : nums[j + 1];
            int cost = left * right * nums[cut] + maximumCost(nums, i, cut - 1, dp) + maximumCost(nums, cut + 1, j, dp);
            maximumCost = Math.max(maximumCost, cost);
        }
        dp[i][j] = maximumCost;
        return dp[i][j];
    }
}

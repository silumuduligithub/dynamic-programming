Count Brackets
You are given a number n, representing the number of opening brackets (and closing brackets).

You are required to find the number of ways in which you can arrange the brackets if the closing brackets should never exceed opening brackets. For e.g:

for 1, answer is 1 -> ()
for 2, answer is 2 -> ()(), (())
for 3, asnwer is 5 -> ()()(), () (()), (())(), (()()), ((()))
Input Format
Input consists of an integer n

Output Format
Print the number of ways in which you can arrange the brackets if the closing brackets should never exceed opening brackets

Example 1
Input

4
Output

14
Explanation

(((())))
((()()))
((())())
((()))()
(()(()))
(()()())
(()())()
(())(())
(())()()
()((()))
()(()())
()(())()
()()(())
()()()()
Example 2
Input

3
Output

5
Explanation

()()()
()
(())
(())()
(()())
((()))
Constraints
1 <= n <= 15







import java.util.*;

public class Main {

  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    System.out.println(validParentheses(sc.nextInt()));
    sc.close();
  }

  public static long validParentheses(int n) {
	    if(n == 1 || n == 0)return 1;
		int[] dp = new int[n + 1];
		dp[0] = 1;
		dp[1] = 1;
		for(int i = 2; i <= n; i++){
			int j = 0;
			int k = i - 1;
			int sum = 0;
			while(j < i && k >= 0){
				sum = sum + dp[j] * dp[k];
				k--;
				j++;
			}
			dp[i] = sum;
		}
	  return dp[n];
  }
}

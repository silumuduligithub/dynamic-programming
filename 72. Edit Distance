class Solution{
    public int minDistance(String word1, String word2) {
        int w1 = word1.length();
        int w2 = word2.length();
        int[][] dp = new int[w1 + 1][w2 + 1];
        for(int i = 0; i <= w1; i++)dp[i][0] = i;
        for(int i = 0; i <= w2; i++)dp[0][i] = i;
        for(int i = 1; i <= w1; i++){
            for(int j = 1; j <= w2; j++){
                char ch1 = word1.charAt(i - 1);
                int ch2 = word2.charAt(j - 1);
                if(ch1 == ch2)dp[i][j] = dp[i - 1][j - 1];
                else{
                int insert = dp[i][j - 1];
                int delete = dp[i - 1][j];
                int replace = dp[i - 1][j - 1];
                dp[i][j] = Math.min(insert, Math.min(delete, replace)) + 1;
                }
            }
        }
        return dp[w1][w2];
    }
}

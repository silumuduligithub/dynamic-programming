class Solution {
    public int maxDotProduct(int[] nums1, int[] nums2) {
        int[][] dp = new int[nums2.length][nums1.length];
        for(int i = 0; i < nums1.length; i++){
            int product = nums1[i] * nums2[0];
            if(i == 0){
                dp[0][i] = product;
            }else{
                dp[0][i] = Math.max(dp[0][i - 1],  product); 
            }
        }
        for(int j = 1; j < nums2.length; j++){
            int product = nums2[j] * nums1[0];
            dp[j][0] = Math.max(dp[j - 1][0], product);
        }
        for(int i = 1; i < nums2.length; i++){
            for(int j = 1; j < nums1.length; j++){
                int product = nums2[i] * nums1[j];
                int prevDotProductMax = Math.max(dp[i - 1][j - 1], Math.max(dp[i - 1][j], dp[i][j - 1]));
                dp[i][j] = Math.max(prevDotProductMax, Math.max(product, dp[i - 1][j - 1] + product));
            }
        }
        return dp[nums2.length - 1][nums1.length - 1];
    }
}
